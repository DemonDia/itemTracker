{"version":3,"sources":["components/item.js","components/additem.js","context.js","pages/home.js","pages/edit.js","components/transaction.js","pages/history.js","components/navbar.js","components/filter.js","App.js","index.js"],"names":["Item","item","className","to","itemId","name","qty","minQty","status","addedDate","AddItem","useState","itemName","setItemName","setMinQty","type","placeholder","value","onChange","e","target","onClick","console","log","Axios","post","then","AppContext","React","createContext","AppProvider","children","search","setSearch","filter","setFilters","page","setPage","colName","setColName","order","setOrder","Provider","useGlobalContext","useContext","Home","itemList","setItemList","useEffect","get","response","data","window","scrollTo","params","id","searchItem","String","toLowerCase","includes","map","EditItem","useParams","currentItem","setCurrentItem","newName","setNewName","newQty","setNewQty","newMinQty","setNewMinQty","result","style","defaultValue","handleName","handleQty","handleMinQty","colSpan","currID","parseInt","intNewQty","intNewMinQty","action","error","Transaction","transaction","itemID","transType","transDate","History","transactions","getTransactions","Navbar","showLinks","setShowLinks","linksContainerRef","useRef","linksRef","linksHeight","current","getBoundingClientRect","height","handleChange","ref","Filter","categories","setCategories","orders","table","length","COLUMN_NAME","changeCol","category","i","changeOrder","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29dc7c71.chunk.js","sourcesContent":["import { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\n// status: OK, REFILL\r\nconst Item = ({item}) =>{\r\n    // const id = item.itemId\r\n    // console.log(id)\r\n    // go to the edity\r\n    // console.log(item)\r\n\r\n    return(\r\n        \r\n        <div className = \"itemContainer\"><Link to = {`/itemTracker/edit/${item.itemId}`}>\r\n            <table>\r\n                <tbody>\r\n\r\n                    <tr>\r\n                        <th>ID:</th>\r\n                        <td>{item.itemId} </td>\r\n                    </tr>\r\n\r\n\r\n                    <tr>\r\n                        <th>Name:</th>\r\n                        <td>{item.name}</td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>Qty:</th>\r\n                        <td>{item.qty}</td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>Min Qty:</th>\r\n                        <td>{item.minQty}</td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>Status:</th>\r\n                        <td>{item.status}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Added Date:</th>\r\n                        <td>{item.addedDate}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            </Link></div>\r\n        \r\n    )\r\n}\r\nexport default Item;\r\n","import React, {useState} from \"react\"\r\nimport Axios from \"axios\"\r\n\r\nconst AddItem = () =>{\r\n    const [itemName,setItemName] = useState(\"\")\r\n    const [minQty,setMinQty] = useState(\"\")\r\n    const handleSubmit = (e) =>{\r\n        // e.preventDefault()\r\n        console.log(itemName)\r\n        console.log(minQty)\r\n        // const currentDate = new Date().toISOString().slice(0, 19).replace('T', ' ')\r\n        // console.log(currentDate)\r\n        if(itemName){\r\n            if(minQty){\r\n                if(minQty > 0){\r\n                    setItemName(\"\")\r\n                    setMinQty(\"\")\r\n                    Axios.post(\"https://task-trackerzxc.herokuapp.com/api/addItem\",{\r\n                        itemName:itemName,minQty:minQty\r\n                    }).then(()=>{\r\n                        console.log(\"done\")\r\n                    })\r\n\r\n                }\r\n                else{\r\n                    console.log(\"minimum qty must be more than 0\")\r\n                }\r\n\r\n            }\r\n            else{\r\n                console.log(\"minimum qty cannot be empty\")\r\n            }\r\n\r\n        }\r\n        else{\r\n            console.log(\"name cannot be empty\")\r\n        }\r\n        \r\n    }\r\n    return(\r\n\r\n\r\n        <div className = \"addItem\">\r\n            <form>\r\n                <b><label>New item:</label><br></br></b>\r\n                <input type = \"text\" placeholder = \"New item name\"\r\n                value = {itemName} onChange = {(e)=>{setItemName(e.target.value)}}/>\r\n                <b><label>Min quantity:</label><br></br></b>\r\n\r\n                <input type = \"number\" placeholder = \"New item min qty\"\r\n                value = {minQty} onChange = {(e)=>{setMinQty(e.target.value)}}/>\r\n                <button onClick = {(e)=>{handleSubmit(e)}}>Add</button>\r\n            </form>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default AddItem;","import React,{useContext,useState,useEffect} from \"react\"\r\nconst AppContext = React.createContext()\r\n\r\n\r\nconst AppProvider = ({children}) =>{\r\n    const [search,setSearch] = useState(\"\")\r\n    const [filter,setFilters] = useState(\"\")\r\n    \r\n\r\n    // for filtering\r\n    const [page,setPage] = useState(\"\") //item or transaction\r\n    const [colName,setColName] = useState(null)\r\n    const [order,setOrder] = useState(null)\r\n    // const [categories,setCategories] = useState([])\r\n\r\n    return(\r\n        <AppContext.Provider\r\n        value = {{setSearch,search,\r\n        filter,setFilters,\r\n        page,setPage,\r\n        colName,setColName,\r\n        order,setOrder,\r\n        }}>{children} \r\n        </AppContext.Provider>\r\n    )\r\n}\r\nexport const useGlobalContext = () =>{\r\n    return useContext(AppContext)\r\n}\r\n\r\nexport {AppContext,AppProvider}","import Item from \"../components/item\"\r\nimport AddItem from \"../components/additem\"\r\nimport Axios from \"axios\"\r\nimport React, {useState,useEffect} from \"react\"\r\nimport {useGlobalContext} from \"../context\"\r\nfunction Home() {\r\n  // for the item\r\n  const {search,setPage,colName,order} = useGlobalContext()\r\n  const [itemList,setItemList] = useState([])\r\n  // uploading the items into the DB\r\n  useEffect(()=>{\r\n    Axios.get(\"https://task-trackerzxc.herokuapp.com/api/getItems\").then((response)=>{\r\n      setItemList(response.data)\r\n\r\n      setPage(\"item\")\r\n      window.scrollTo(0, 0)\r\n    })\r\n  },[])\r\n  useEffect(()=>{\r\n    Axios.get(\"https://task-trackerzxc.herokuapp.com/api/getItems\",{params:{colName:colName,order:order}}).then((response)=>{\r\n      setItemList(response.data)\r\n      setPage(\"item\")\r\n      window.scrollTo(0, 0)\r\n    })\r\n  },[colName,order])\r\n\r\n// console.log(colName)\r\n// console.log(\"itemList\",itemList)\r\n  return (\r\n  <div id =\"home\">\r\n    <AddItem/>\r\n    { \r\n    \r\n      !itemList?null:\r\n            !colName?null:\r\n      itemList.filter(searchItem => String(searchItem[colName]).toLowerCase().includes(search.toLowerCase()) || searchItem[colName] ===\"\")\r\n      .map(searchItem =>\r\n        <Item key = {searchItem[\"itemId\"]} item = {searchItem}/>\r\n        )\r\n\r\n\r\n    }\r\n      \r\n  </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Home;","\r\nimport { MdSystemUpdateAlt,MdDelete,MdCancel } from \"react-icons/md\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\"\r\nimport React, {useEffect,useState} from \"react\";\r\nimport {useGlobalContext} from \"../context\"\r\nfunction EditItem() {\r\n  let {id} = useParams(\r\n  )\r\n  const [currentItem,setCurrentItem] = useState(null) // item chosen\r\n\r\n\r\n  const [newName,setNewName] = useState(\"\")\r\n  const [newQty,setNewQty] = useState(0)\r\n  const [newMinQty,setNewMinQty] = useState(0)\r\n\r\n  const {setPage} = useGlobalContext()\r\n\r\n  useEffect(()=>{\r\n    // console.log(id)\r\n    Axios.get(\"https://task-trackerzxc.herokuapp.com/api/getItem\",{params:{itemId:id}})\r\n    .then((result)=>{\r\n      setPage(\"edit\")\r\n      if(!currentItem){\r\n        // const item = result.data\r\n        setCurrentItem(result.data)\r\n        \r\n      }\r\n      else{\r\n        setNewName(currentItem.name)\r\n        setNewQty(currentItem.qty)\r\n        setNewMinQty(currentItem.minQty)\r\n      }\r\n      \r\n    })\r\n  },[currentItem])\r\n\r\n// console.log(currentItem)\r\n\r\n  const handleName = (e) =>{\r\n    setNewName(e.target.value)\r\n    // console.log(newName)\r\n  }\r\n  const handleQty = (e) =>{\r\n    setNewQty(e.target.value)\r\n  }\r\n  const handleMinQty = (e) =>{\r\n    setNewMinQty(e.target.value)\r\n  }\r\n\r\n  const updateItem = () =>{\r\n    //  parse in the updated values and the ID\r\n    console.log(id)\r\n    console.log(newName,currentItem.name)\r\n    console.log(newQty,currentItem.qty)\r\n    console.log(newMinQty,currentItem.minQty)\r\n    let currID = parseInt(id)\r\n    let intNewQty = parseInt(newQty)\r\n    let intNewMinQty = parseInt(newMinQty)\r\n    let action = \"UPDATE\"\r\n    let error = false\r\n    // if nth changes\r\n    console.log(\"newmin\",intNewMinQty)\r\n    console.log(\"newqty\",intNewQty)\r\n    if((newName === currentItem.name) && (newQty ===currentItem.qty)&& (newMinQty === currentItem.minQty)){\r\n      console.log(\"no change\")\r\n    }\r\n    else{\r\n    if((intNewQty >= 0) &&\t(intNewMinQty > 0)){\r\n    if(intNewQty>currentItem.qty){\r\n      action = \"RESTOCK\"\r\n      // setAction(\"REFILL\")\r\n      console.log(action)\r\n    }\r\n    else if(intNewQty < currentItem.qty){\r\n      // setAction(\"REFILL\")\r\n      action = \"USE\"\r\n      console.log(action)\r\n    }\r\n  \r\n  \r\n  }\r\n    else{\r\n      error = true\r\n      console.log(\"error\")\r\n    }\r\n    console.log(\"error\",error)\r\n    if(error === false){\r\n    Axios.post(\"https://task-trackerzxc.herokuapp.com/api/updateItem\",{itemId:currID,name:newName,qty:intNewQty,minQty:intNewMinQty,action:action})}\r\n    // \r\n\r\n  }}\r\n\r\n  const deleteItem = () =>{\r\n    console.log(id)\r\n    // id = parseInt(id)\r\n    Axios.post(\"https://task-trackerzxc.herokuapp.com/api/deleteItem\",{itemId:id})\r\n    console.log(\"done\")\r\n  }\r\n  return (\r\n    <div id =\"edit\">\r\n      {\r\n        !currentItem? <h1>Item not found</h1>:\r\n         \r\n          <form>\r\n          <h3 style = {{\"textAlign\":\"center\"}}>Update Good's Name</h3>\r\n          <table className = \"formTable\">\r\n            <tbody>\r\n              <tr>\r\n                <th>ID:</th>\r\n                <td>{currentItem.itemId}</td>\r\n              </tr>\r\n  \r\n              <tr>\r\n                <th>Name:</th>\r\n                <td><input type= 'text' defaultValue = {currentItem.name} onChange = {(e)=>{handleName(e)}}/> </td>\r\n\r\n              </tr>\r\n  \r\n              <tr>\r\n                <th>Current Qty:</th>\r\n                <td><input type= 'number' defaultValue = {currentItem.qty}  onChange = {(e)=>{handleQty(e)}}/> </td>\r\n              </tr>\r\n  \r\n              <tr>\r\n                <th>Min Qty:</th>\r\n                <td><input type= 'number' defaultValue = {currentItem.minQty}  onChange = {(e)=>{handleMinQty(e)}}/></td>\r\n              </tr>\r\n  \r\n              <tr>\r\n                <th>Status:</th>\r\n                <td>{currentItem.status}</td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan = \"2\" style = {{\"textAlign\":\"center\"}}>\r\n                  <Link to  = \"/itemTracker/\" onClick = {updateItem}>\r\n                    <button>Update <MdSystemUpdateAlt/></button>\r\n                  </Link>\r\n                  </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan = \"2\" style = {{\"textAlign\":\"center\"}}>\r\n                  <Link to  = \"/itemTracker/\" onClick = {deleteItem}>\r\n\r\n                    <button>Delete <MdDelete/></button>\r\n                  </Link>\r\n                  </td>\r\n                  \r\n              </tr>\r\n  \r\n              <tr>\r\n                <td colSpan = \"2\" style = {{\"textAlign\":\"center\"}}>\r\n                  <Link to = \"/itemTracker/\">\r\n                    <button>Cancel <MdCancel/></button>\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n  \r\n  \r\n            </tbody>\r\n          </table>\r\n  \r\n        </form>\r\n      \r\n        \r\n        \r\n\r\n      }\r\n\r\n\r\n    </div>\r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default EditItem;","const Transaction = ({transaction}) =>{\r\n    // only for qty\r\n    // types: add, delete, update\r\n    // for update: if qty decrease, put use; else restock\r\n    // console.log(transaction)\r\n    \r\n    return(\r\n                    <tr className = \"transaction\">\r\n                        <td>\r\n                            {transaction.id}\r\n                        </td>\r\n\r\n                        <td>\r\n                           {transaction.itemID}\r\n                        </td>\r\n\r\n\r\n                        <td>\r\n                        {transaction.transType}\r\n                        </td>\r\n\r\n                        <td>\r\n                        {transaction.qty}\r\n                        </td>\r\n                        <td>\r\n                        {transaction.transDate}\r\n                        </td>\r\n                    </tr>\r\n\r\n    )\r\n\r\n}\r\nexport default Transaction;","import Transaction from \"../components/transaction\"\r\nimport {useGlobalContext} from \"../context\"\r\nimport React, {useState,useEffect} from \"react\"\r\nimport Axios from \"axios\"\r\nconst History = () =>{\r\n    const [transactions, getTransactions] = useState([])\r\n    const {search,setPage,colName,order} = useGlobalContext()\r\n    // useEffect(()=>{\r\n    //     Axios.get(\"http://localhost:3302/api/getTransactions\").then((response)=>{\r\n    //         getTransactions(response.data)\r\n    //         setPage(\"transaction\")\r\n    //         window.scrollTo(0, 0)\r\n    //     })\r\n    // },[])\r\n\r\n    useEffect(()=>{\r\n        Axios.get(\"https://task-trackerzxc.herokuapp.com/api/getTransactions\",{params:{colName:colName,order:order}}).then((response)=>{\r\n            getTransactions(response.data)\r\n          setPage(\"transaction\")\r\n          window.scrollTo(0, 0)\r\n        })\r\n      },[colName,order])\r\n    return (\r\n    <div id =\"history\">\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                        <th> ID \r\n\r\n                        </th>\r\n\r\n                        <th> Item ID \r\n\r\n                        </th>\r\n\r\n\r\n                        <th>Type\r\n                            \r\n                        </th>\r\n\r\n                        <th>Qty\r\n                            \r\n                        </th>\r\n\r\n                        <th>Date\r\n                            \r\n                        </th>\r\n                        \r\n\r\n                </tr>\r\n\r\n                {\r\n           \r\n                    !transactions?null:\r\n                          !colName?null:\r\n                          transactions.filter(searchItem => String(searchItem[colName]).toLowerCase().includes(search.toLowerCase()) || searchItem[colName] ===\"\").map(searchItem =>\r\n                      <Transaction key = {searchItem[\"id\"]} transaction = {searchItem}/>\r\n                      )\r\n                }\r\n\r\n\r\n\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n  \r\n    );\r\n  }\r\n  \r\n  export default History;","\r\nimport React, {useState, useRef,useEffect} from \"react\"\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport {FaBars} from \"react-icons/fa\";\r\nimport {useGlobalContext} from \"../context\"\r\n// import Axios from \"axios\"\r\n\r\n// import { BiSearch } from \"react-icons/bi\";\r\n\r\n\r\n    const Navbar = () =>{\r\n        const [showLinks,setShowLinks] = useState(false);\r\n        const linksContainerRef = useRef(null);\r\n        const linksRef = useRef(null);\r\n        const {search,setSearch,page} = useGlobalContext()\r\n        const handleChange = (e)=>{\r\n            setSearch(e.target.value)\r\n        }\r\n    \r\n        useEffect(()=>{//callback\r\n            //check link height and then change height\r\n            const linksHeight = linksRef.current.getBoundingClientRect().height\r\n            if(showLinks){\r\n                linksContainerRef.current.style.height = `${linksHeight}px`\r\n            }\r\n            else{\r\n                linksContainerRef.current.style.height = \"0px\"\r\n            }\r\n    \r\n        },[showLinks])\r\n        // show options\r\n\r\n        return(\r\n            <nav id = \"navz\">\r\n                <div className = \"nav-center\">\r\n                    <div className = \"nav-header\">\r\n                        <button className = \"nav-toggle\" onClick = {()=> setShowLinks(!showLinks)}>\r\n                            <FaBars/>\r\n                        </button>\r\n                        \r\n\r\n                        <input className = \"searchBar\" type = \"text\" placeholder = \"🔎︎ Search for item\"\r\n                        onChange = {(e)=>{handleChange(e)}} \r\n                        value = {search}></input>\r\n\r\n                    </div>\r\n                    {/* {search} */}\r\n                    \r\n    \r\n                    <div \r\n                        className = \"links-container\"\r\n                        ref = {linksContainerRef}\r\n                        >\r\n                        <ul \r\n                        className = \"links\"\r\n                        \r\n                        ref = {linksRef}>\r\n\r\n\r\n                            <li>\r\n                                <Link to = \"/itemTracker/\">Home</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to = \"/itemTracker/history\">History</Link>\r\n                            </li>\r\n \r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    \r\n    }\r\n    export default Navbar;","import React,{useState,useEffect} from \"react\"\r\nimport {useGlobalContext} from \"../context\"\r\nimport Axios from \"axios\"\r\n\r\nconst Filter = () =>{\r\n    const {page,colName,setColName,setOrder} = useGlobalContext()\r\n    const [categories,setCategories] = useState([])\r\n    // const [colName,setColName] = useState(null)\r\n    // const [order,setOrder] = useState(null)\r\n    const orders = [\"asc\",\"desc\"]\r\n    console.log(\"page\",page)\r\n\r\n\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n        Axios.get(\"https://task-trackerzxc.herokuapp.com/api/getTable\",{params:{table:page}}).then((response)=>{\r\n            if(response){\r\n                console.log(\"resp\",response.data)\r\n\r\n                setCategories(response.data)\r\n                if(categories.length>0){\r\n                        console.log(categories[0].COLUMN_NAME)\r\n                        setColName(categories[0].COLUMN_NAME)\r\n\r\n                }\r\n\r\n                // setColName(response.data[0].COLUMN_NAME)\r\n\r\n\r\n            }\r\n\r\n        })\r\n\r\n    },[page])\r\n\r\n    useEffect(()=>{\r\n        // if(!colName){ //set default\r\n            if(categories.length != 0){\r\n                // console.log(\"cat\",categories)\r\n                console.log(\"cats\",categories)\r\n                setColName(categories[0].COLUMN_NAME)\r\n                setOrder(orders[0])\r\n            }\r\n        // }\r\n\r\n    },[categories])\r\n    const changeCol = (e)=>{\r\n        console.log(e.target.value)\r\n        setColName(e.target.value)\r\n\r\n    }\r\n    const changeOrder = (e)=>{\r\n        console.log(e.target.value)\r\n        setOrder(e.target.value)\r\n\r\n    }\r\n\r\n\r\n// console.log(\"page\",page)\r\n// console.log(\"categories\",categories)\r\n// console.log(\"colName\",colName)\r\nreturn(\r\n    <div className = \"filter\">\r\n        <label>Group by: </label>\r\n        <select onChange = {(e)=>{changeCol(e)}}\r\n        defaultValue = {\r\n            colName?colName[0].COLUMN_NAME:null\r\n        }>\r\n            {\r\n                \r\n                categories.map((category,i)=>{\r\n                    return(\r\n                        <option value = {category.COLUMN_NAME} key = {i}>\r\n                            {category.COLUMN_NAME}\r\n                        </option>\r\n                    )\r\n                })\r\n            }\r\n        </select>\r\n        <label>Sort/Search by: </label>\r\n        <select onChange = {(e)=>{changeOrder(e)}}\r\n        defaultValue = {orders[0]}> \r\n            {\r\n                orders.map((order)=>{\r\n                    return(\r\n                        <option value = {order} key = {order}>\r\n                            {order+\"ending\"}\r\n                        </option>\r\n                    )\r\n                })\r\n            }\r\n            {/* <option>\r\n                Ascending\r\n            </option>\r\n\r\n            <option>\r\n                Descending\r\n            </option> */}\r\n        </select>\r\n\r\n    </div>\r\n)\r\n}\r\nexport default Filter;","import './App.css';\nimport Home from \"./pages/home\";\nimport Edit from \"./pages/edit\";\n// import Works from \"./pages/works\";\nimport History from \"./pages/history\"\nimport NavBar from \"./components/navbar\"\nimport Filter from \"./components/filter\"\nimport {useGlobalContext} from \"./context\"\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nfunction App() {\n  const {page} = useGlobalContext()\n  return (\n    <div>\n      \n      <Router>\n        <NavBar/>\n        {\n          !(page===\"edit\")?<Filter/>:null\n        }\n        \n\n        <div id  = \"body\">\n          <Switch>\n            <Route exact path = \"/itemTracker\"><Home/></Route>\n            <Route  exact path = \"/itemTracker/history\"><History/></Route>\n            <Route  exact path = \"/itemTracker/edit/:id\"><Edit/></Route>\n          </Switch>\n\n\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AppProvider} from \"./context\"\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}